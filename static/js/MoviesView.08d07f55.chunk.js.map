{"version":3,"file":"static/js/MoviesView.08d07f55.chunk.js","mappings":"2TAGMA,EAAU,mCAChBC,IAAAA,SAAAA,QAFY,+BAIL,IAAMC,EAAkB,mCAAG,6GAEPD,IAAAA,IAAA,sCAAyCD,IAFlC,cAExBG,EAFwB,yBAGvBA,EAASC,KAAKC,SAHS,gCAK9BC,QAAQC,IAAR,MAL8B,yDAAH,qDASlBC,EAAe,mCAAG,WAAMC,GAAN,gGAEJR,IAAAA,IAAA,gCACID,EADJ,kBACqBS,EADrB,oBAFI,cAErBN,EAFqB,yBAKpBA,EAASC,KAAKC,SALM,gCAO3BC,QAAQC,IAAR,MAP2B,yDAAH,sDAWfG,EAAgB,mCAAG,WAAMC,GAAN,gGAELV,IAAAA,IAAA,iBACXU,EADW,oBACQX,EADR,oBAFK,cAEtBG,EAFsB,yBAKrBA,EAASC,MALY,gCAO5BE,QAAQC,IAAR,MAP4B,yDAAH,sDAWhBK,EAAgB,mCAAG,WAAMD,GAAN,gGAELV,IAAAA,IAAA,iBACXU,EADW,4BACgBX,EADhB,oBAFK,cAEtBG,EAFsB,yBAKrBA,EAASC,MALY,gCAO5BE,QAAQC,IAAR,MAP4B,yDAAH,sDAWhBM,EAAe,mCAAG,WAAMF,GAAN,gGAEJV,IAAAA,IAAA,iBACXU,EADW,4BACgBX,EADhB,2BAFI,cAErBG,EAFqB,yBAKpBA,EAASC,MALW,gCAO3BE,QAAQC,IAAR,MAP2B,yDAAH,qD,8GC/C5B,EAA0B,4B,SCGbO,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACE,kBAAMH,SAdiB,SAAAI,GACvBA,EAAEC,iBACF,IAAMX,EAAQQ,EAAWI,OAEX,KAAVZ,GAKJM,EAASN,EAAMa,eACfJ,EAAc,KALZK,MAAM,0BAMT,EAGC,WACE,kBACEC,MAAOP,EACPQ,SAtBoB,SAAAN,GACxB,IAAMK,EAAQL,EAAEO,OAAOF,MACvBN,EAAcM,EACf,EAoBKG,KAAK,OACLC,aAAa,MACbC,UAAWC,KAEb,mBAAQH,KAAK,SAAb,sBAGL,E,UChCc,SAASI,IACtB,OAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOgB,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAWF,EAAaG,IAAI,SAClC,GAA0BxB,EAAAA,EAAAA,UAAQ,OAACuB,QAAD,IAACA,EAAAA,EAAY,IAA/C,eAAO9B,EAAP,KAAcgC,EAAd,KAwBA,OAfAC,EAAAA,EAAAA,YAAU,WACM,KAAVjC,IACFD,EAAAA,EAAAA,GAAgBC,GAAOkC,KAAKV,GAEhB,KAAVxB,GACFwB,EAAU,GAEb,GAAE,CAACxB,KAEJiC,EAAAA,EAAAA,YAAU,WACHH,GACHE,EAAS,GAEZ,GAAE,CAACF,KAGF,6BACE,SAACzB,EAAD,CAAYC,SAxBS,SAAAS,GACnBf,IAAUe,IACZiB,EAASjB,GACTc,EAAgB,SAAD,OAAUd,IAE5B,IAqBIQ,EAAOY,OAAS,IACf,wBACGZ,EAAOa,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMhB,GAAxC,SACGY,EAAMK,SAFFL,EAAME,GADA,QAW1B,C","sources":["helpers/helpers.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","pages/Movies/MoviesView.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8b67a89c3b3cf87de76d1484537ca872';\naxios.defaults.baseURL = URL;\n\nexport const fechTrendingMovies = async () => {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fechQueryMovies = async query => {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fechMovieDetails = async mivieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${mivieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fechMovieCredits = async mivieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${mivieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fechMovieReview = async mivieId => {\n  try {\n    const response = await axios.get(\n      `/movie/${mivieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"InputIn\":\"SearchForm_InputIn__-DrwN\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from 'components/SearchForm/SearchForm.module.css';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setInputValue(value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const query = inputValue.trim();\n\n    if (query === '') {\n      alert('Query can not be empty!');\n      return;\n    }\n\n    onSubmit(query.toLowerCase());\n    setInputValue('');\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <input\n        value={inputValue}\n        onChange={handleInputChange}\n        type=\"text\"\n        autoComplete=\"off\"\n        className={css.InputIn}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { fechQueryMovies } from 'helpers/helpers';\n\nexport default function MoviesView() {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const urlQuery = searchParams.get('query');\n  const [query, setQuery] = useState(urlQuery ?? '');\n\n  const handleFormSubmit = value => {\n    if (query !== value) {\n      setQuery(value);\n      setSearchParams(`query=${value}`);\n    }\n  };\n\n  useEffect(() => {\n    if (query !== '') {\n      fechQueryMovies(query).then(setMovies);\n    }\n    if (query === '') {\n      setMovies([]);\n    }\n  }, [query]);\n\n  useEffect(() => {\n    if (!urlQuery) {\n      setQuery('');\n    }\n  }, [urlQuery]);\n\n  return (\n    <main>\n      <SearchForm onSubmit={handleFormSubmit} />\n\n      {movies.length > 0 && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </main>\n  );\n}\n"],"names":["API_KEY","axios","fechTrendingMovies","response","data","results","console","log","fechQueryMovies","query","fechMovieDetails","mivieId","fechMovieCredits","fechMovieReview","SearchForm","onSubmit","useState","inputValue","setInputValue","e","preventDefault","trim","toLowerCase","alert","value","onChange","target","type","autoComplete","className","css","MoviesView","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","urlQuery","get","setQuery","useEffect","then","length","map","movie","to","id","state","from","title"],"sourceRoot":""}