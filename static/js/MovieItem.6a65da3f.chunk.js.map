{"version":3,"file":"static/js/MovieItem.6a65da3f.chunk.js","mappings":"2TAGMA,EAAU,mCAChBC,IAAAA,SAAAA,QAFY,+BAIL,IAAMC,EAAkB,mCAAG,oGACTD,IAAAA,IAAA,sCAAyCD,IADhC,cAC1BG,EAD0B,yBAEzBA,EAASC,KAAKC,SAFW,2CAAH,qDAKlBC,EAAe,mCAAG,WAAMC,GAAN,uFACNN,IAAAA,IAAA,gCACID,EADJ,kBACqBO,EADrB,oBADM,cACvBJ,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfG,EAAgB,mCAAG,WAAMC,GAAN,uFACPR,IAAAA,IAAA,iBACXQ,EADW,oBACQT,EADR,oBADO,cACxBG,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBM,EAAgB,mCAAG,WAAMD,GAAN,uFACPR,IAAAA,IAAA,iBACXQ,EADW,4BACgBT,EADhB,oBADO,cACxBG,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBO,EAAe,mCAAG,WAAMF,GAAN,uFACNR,IAAAA,IAAA,iBACXQ,EADW,4BACgBT,EADhB,2BADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD,wHC/B5B,GAAgB,IAAM,uBAAuB,KAAO,wBAAwB,SAAW,4BAA4B,KAAO,wBAAwB,WAAa,8BAA8B,KAAO,yB,SCUrL,SAASQ,IAAa,IAAD,QAC1BC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,YACRd,EAAAA,EAAAA,IAAiBe,OAAOV,IACrBW,MAAK,SAAApB,GACJiB,EAASjB,EACV,IACAqB,OAAM,SAAAC,GAAU,IAAD,IACdC,QAAQC,IAAIF,GACZT,EAAQ,oBAACF,EAASc,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,IAClC,GACJ,GAAE,CAACjB,EAASE,EAAUE,IAEvB,IAImBc,EAIbC,EAAQZ,EAAQa,KAAKC,MAAOd,EAAMe,aAAe,GAAM,KAAO,GAC9DC,EAAShB,EAAK,yCACkBA,EAAMiB,aACxC,GACEC,EAAOlB,EAAQmB,OAAOnB,EAAMoB,cAAcC,UAAU,EAAG,GAAK,GAElE,OACE,2BACE,gCACE,mBAAQC,KAAK,SAASC,QAjBX,WAAO,IAAD,IACrB1B,EAAQ,oBAACF,EAASc,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,UAClC,EAe8Cc,UAAWC,EAAAA,IAApD,qBAGCzB,IACC,4BACE,iBAAKwB,UAAWC,EAAAA,KAAhB,WACE,gBAAKD,UAAWC,EAAAA,SAAhB,UACE,gBAAKC,IAAKV,EAAQW,IAAI,GAAGC,MAAM,WAGjC,iBAAKJ,UAAWC,EAAAA,WAAhB,WACE,kCAAQzB,EAAM6B,eAAd,aAAiCX,EAAjC,QACA,gDAAsBN,EAAtB,QACA,sCACA,0BAAOZ,EAAM8B,YACb,oCACA,2BA7BKnB,EA6BaX,EAAMW,OA5B7BA,EAAOoB,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAgCpC,iBAAKV,UAAWC,EAAAA,KAAhB,WACE,mDACA,2BACE,yBACE,SAAC,KAAD,CACEU,GAAG,OACH1B,MAAO,CAAEC,KAAI,oBAAEf,EAASc,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WACvCc,UAAW,qBAAGY,SACDX,EAAAA,WAAiBA,EAAAA,IADnB,EAHb,qBAUF,yBACE,SAAC,KAAD,CACEU,GAAG,UACH1B,MAAO,CAAEC,KAAI,oBAAEf,EAASc,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,WACvCc,UAAW,qBAAGY,SACDX,EAAAA,WAAiBA,EAAAA,IADnB,EAHb,8BAaN,SAAC,EAAAY,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,aAOb,C","sources":["helpers/helpers.jsx","webpack://react-homework-template/./src/pages/MovieItem/MovieItem.module.css?cadc","pages/MovieItem/MovieItem.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8b67a89c3b3cf87de76d1484537ca872';\naxios.defaults.baseURL = URL;\n\nexport const fechTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fechQueryMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const fechMovieDetails = async mivieId => {\n  const response = await axios.get(\n    `/movie/${mivieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fechMovieCredits = async mivieId => {\n  const response = await axios.get(\n    `/movie/${mivieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fechMovieReview = async mivieId => {\n  const response = await axios.get(\n    `/movie/${mivieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Btn\":\"MovieItem_Btn__-XNwT\",\"Card\":\"MovieItem_Card__KFtZA\",\"ImgThumb\":\"MovieItem_ImgThumb__ldcsl\",\"Link\":\"MovieItem_Link__2UfGg\",\"ActiveLink\":\"MovieItem_ActiveLink__kkftU\",\"Info\":\"MovieItem_Info__+h9c0\"};","import {\n  useParams,\n  useLocation,\n  useNavigate,\n  NavLink,\n  Outlet,\n} from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fechMovieDetails } from 'helpers/helpers';\nimport css from 'pages/MovieItem/MovieItem.module.css';\n\nexport default function MovieItem() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState('');\n\n  useEffect(() => {\n    fechMovieDetails(Number(movieId))\n      .then(data => {\n        setMovie(data);\n      })\n      .catch(error => {\n        console.log(error);\n        navigate(location.state?.from ?? '/');\n      });\n  }, [movieId, location, navigate]);\n\n  const onGoBack = () => {\n    navigate(location.state?.from ?? '/movies');\n  };\n\n  const joinGenres = genres => {\n    return genres.map(genre => genre.name).join(', ');\n  };\n\n  const score = movie ? Math.round((movie.vote_average / 10) * 100) : '';\n  const imgSrc = movie\n    ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n    : '';\n  const year = movie ? String(movie.release_date).substring(0, 4) : '';\n\n  return (\n    <main>\n      <section>\n        <button type=\"button\" onClick={onGoBack} className={css.Btn}>\n          Go back\n        </button>\n        {movie && (\n          <div>\n            <div className={css.Card}>\n              <div className={css.ImgThumb}>\n                <img src={imgSrc} alt=\"\" width=\"220\" />\n              </div>\n\n              <div className={css.MovieDescr}>\n                <h2>{`${movie.original_title} (${year})`}</h2>\n                <span>{`User Score: ${score}%`}</span>\n                <h3>Overview</h3>\n                <span>{movie.overview}</span>\n                <h4>Genres</h4>\n                <span>{joinGenres(movie.genres)}</span>\n              </div>\n            </div>\n\n            <div className={css.Info}>\n              <p>Additional information</p>\n              <ul>\n                <li>\n                  <NavLink\n                    to=\"cast\"\n                    state={{ from: location.state?.from ?? '/movies' }}\n                    className={({ isActive }) =>\n                      isActive ? css.ActiveLink : css.Link\n                    }\n                  >\n                    Cast\n                  </NavLink>\n                </li>\n                <li>\n                  <NavLink\n                    to=\"reviews\"\n                    state={{ from: location.state?.from ?? '/movies' }}\n                    className={({ isActive }) =>\n                      isActive ? css.ActiveLink : css.Link\n                    }\n                  >\n                    Reviews\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n\n            <Suspense fallback={<div>Loading subpage...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        )}\n      </section>\n    </main>\n  );\n}\n"],"names":["API_KEY","axios","fechTrendingMovies","response","data","results","fechQueryMovies","query","fechMovieDetails","mivieId","fechMovieCredits","fechMovieReview","MovieItem","movieId","useParams","location","useLocation","navigate","useNavigate","useState","movie","setMovie","useEffect","Number","then","catch","error","console","log","state","from","genres","score","Math","round","vote_average","imgSrc","poster_path","year","String","release_date","substring","type","onClick","className","css","src","alt","width","original_title","overview","map","genre","name","join","to","isActive","Suspense","fallback"],"sourceRoot":""}