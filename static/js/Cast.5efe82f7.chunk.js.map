{"version":3,"file":"static/js/Cast.5efe82f7.chunk.js","mappings":"2TAGMA,EAAU,mCAChBC,IAAAA,SAAAA,QAFY,+BAIL,IAAMC,EAAkB,mCAAG,oGACTD,IAAAA,IAAA,sCAAyCD,IADhC,cAC1BG,EAD0B,yBAEzBA,EAASC,KAAKC,SAFW,2CAAH,qDAKlBC,EAAe,mCAAG,WAAMC,GAAN,uFACNN,IAAAA,IAAA,gCACID,EADJ,kBACqBO,EADrB,oBADM,cACvBJ,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfG,EAAgB,mCAAG,WAAMC,GAAN,uFACPR,IAAAA,IAAA,iBACXQ,EADW,oBACQT,EADR,oBADO,cACxBG,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBM,EAAgB,mCAAG,WAAMD,GAAN,uFACPR,IAAAA,IAAA,iBACXQ,EADW,4BACgBT,EADhB,oBADO,cACxBG,EADwB,yBAIvBA,EAASC,MAJc,2CAAH,sDAOhBO,EAAe,mCAAG,WAAMF,GAAN,uFACNR,IAAAA,IAAA,iBACXQ,EADW,4BACgBT,EADhB,2BADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,qD,wHC5Bb,SAASQ,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAiBS,OAAOH,IACrBI,MAAK,SAAAhB,GACJW,EAAQX,EAAKU,KAAKO,MAAM,EAAG,GAC5B,IACAC,MAAMC,QAAQC,IAClB,GAAE,CAACR,KAGF,yBACGF,IACC,wBACGA,EAAKW,KAAI,SAAAC,GAAK,OACb,2BACE,0BACE,gBACEC,IAAG,yCAAoCD,EAAME,cAC7CC,IAAI,GACJC,MAAM,WAGV,uBAAIJ,EAAMK,QACV,2CAAiBL,EAAMM,eAThBN,EAAMO,GADF,OAiBxB,C","sources":["helpers/helpers.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '8b67a89c3b3cf87de76d1484537ca872';\naxios.defaults.baseURL = URL;\n\nexport const fechTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fechQueryMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport const fechMovieDetails = async mivieId => {\n  const response = await axios.get(\n    `/movie/${mivieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fechMovieCredits = async mivieId => {\n  const response = await axios.get(\n    `/movie/${mivieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fechMovieReview = async mivieId => {\n  const response = await axios.get(\n    `/movie/${mivieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fechMovieCredits } from 'helpers/helpers';\n\nexport default function Cast() {\n  const [cast, setCast] = useState('');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fechMovieCredits(Number(movieId))\n      .then(data => {\n        setCast(data.cast.slice(0, 5));\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast && (\n        <ul>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              <div>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                  alt=\"\"\n                  width=\"100\"\n                />\n              </div>\n              <p>{actor.name}</p>\n              <p>{`Caracter: ${actor.character}`}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n"],"names":["API_KEY","axios","fechTrendingMovies","response","data","results","fechQueryMovies","query","fechMovieDetails","mivieId","fechMovieCredits","fechMovieReview","Cast","useState","cast","setCast","movieId","useParams","useEffect","Number","then","slice","catch","console","log","map","actor","src","profile_path","alt","width","name","character","id"],"sourceRoot":""}